name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
        os: [ ubuntu-latest ]
        vaultwarden-version: [ '1.32.7', '1.33.2' , '1.34.1']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade hatch
      - name: Run Vaultwarden server
        run: |
          temp_dir=$(mktemp -d)
          cp ${{ github.workspace }}/tests/fixtures/server/* $temp_dir
          docker run -d --name vaultwarden -v $temp_dir:/data  --env I_REALLY_WANT_VOLATILE_STORAGE=true --env ADMIN_TOKEN=admin  --restart unless-stopped -p 80:80 vaultwarden/server:${{ matrix.vaultwarden-version }}
      - name: Run tests
        run: |
          hatch run +py=${{ matrix.py || matrix.python-version }} test:with-coverage
        env:
          VAULTWARDEN_URL: "http://127.0.0.1:80"
          VAULTWARDEN_ADMIN_TOKEN: "admin"
          BITWARDEN_URL: "http://127.0.0.1:80"
          BITWARDEN_EMAIL: "test-account@example.com"
          BITWARDEN_PASSWORD: "test-account"
          BITWARDEN_CLIENT_ID: "user.a8be340c-856b-481f-8183-2b7712995da2"
          BITWARDEN_CLIENT_SECRET: "ag66paVUq4h7tBLbCbJOY5tJkQvUuT"
          BITWARDEN_TEST_ORGANIZATION: "cda840d2-1de0-4f31-bd49-b30dacd7e8b0"
          BITWARDEN_DEVICE_ID: "e54ba5f5-7d58-4830-8f2b-99194c70c14f"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade hatch
      - name: Check with black + isort
        if: always()
        run: hatch run style:format && git diff --exit-code
      - name: Check with ruff
        if: always()
        run: hatch run style:lint
      - name: Check with mypy
        if: always()
        run: hatch run types:check

  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Hatch
        run: |
          python -m pip install -U hatch
      - name: Build package
        run: |
          hatch build